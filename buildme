#!/bin/bash

set -xv

# Check if docker-compose is available
if [[ ! -e docker-compose ]]
then
  curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o docker-compose
  chmod +x docker-compose
fi

./docker-compose up -d --build
VERSION=$(date +"%Y%m%d%H%M")

failed=0
count=0

set +xv
echo "Waiting for PetClinic to start" 1>&2
while ./docker-compose logs petclinic | grep Started >/dev/null 2>&1
do
  sleep 10
  ((count=count+1))
done

if (( count >= 12 ))
then
  echo "Petclinic failed to start" 1>&2
  failed=1
else
  echo "Petclinic started OK" 1>&2
fi

count=0
echo "Testing Petclinic web" 1>&2
while ! curl -s localhost:1080 | grep -i petclinic
do
  if (( count >= 12 ))
  then
    echo "Petclinic failed trying to check web service"
    failed=1
    break
  fi
  sleep 10
  ((count=count+1))
  echo "Count = $count"
done

set -xv
if (( failed == 0 ))
then
  # Get docker registry IP from TFState in S3
  ENV=$1
  BUCKETNAME=$2
  set +x
  tfstate=$(aws s3 cp s3://${BUCKETNAME}/env:/${ENV}/terraform.tfstate -)
  dockerreg=$(echo "$tfstate" | jq -r '.outputs.docker_registry_ip.value')

  set -xv
  docker tag petclinic:latest $dockerreg:5000/petclinic:$VERSION
  docker tag $dockerreg:5000/petclinic:$VERSION $dockerreg:5000/petclinic:latest
  if ! docker push $dockerreg:5000/petclinic:$VERSION
  then
    echo "Failed to push $VERSION to registry" 1>&2
    failed=1
  fi
  if ! docker push $dockerreg:5000/petclinic:latest
  then
    echo "Failed to push latest to registry" 1>&2
    failed=1
  fi
fi

# Clean up
./docker-compose down -rmi
docker rm -f $(docker ps -a | egrep 'petclinic|mysql' | awk '{print $1}')
docker rmi -f $(docker images | egrep 'mysql|none|petclinic' | awk '{print $3}')

if (( failed == 1 ))
then
  echo "FAILED"
  exit 1
else
  echo "SUCCESS"
  exit 0
fi
